@use 'sass:map';
@use 'styles/colors.scss';
@use 'styles/typography.scss';
@use 'styles/breakpoints.scss';

.description-product-container {
  display: flex;
  justify-content: center;

  position: relative;

  width: 100%;
  height: 100%;

  min-height: 100vh;

  margin-bottom: 5rem;

  &::after {
    content: '';
    position: absolute;

    background: linear-gradient(
      90deg,
      rgba(251, 158, 93, 1) 0%,
      rgba(255, 202, 160, 1) 100%
    );
    border-radius: 8px;

    width: 100%;
    height: 100%;

    max-width: calc(100% - 5rem);
    max-height: calc(100% - 15rem);

    bottom: -20px;
    right: 0px;

    z-index: -1;

    @include breakpoints.and-up(md) {
      bottom: -10px;
      right: 50px;
      max-width: calc(100% - 15rem);
      max-height: calc(100% - 12rem);
    }
  }
}

.list-cards {
  display: flex;
  flex-direction: column;
  justify-content: left;
  align-items: left;

  gap: 1rem;
}

.card-container {
  display: grid;
  grid-template-columns: 1fr;
  grid-column: 1;

  border-radius: 8px;

  background-color: colors.$white;

  box-shadow: 2px 2px 4px rgb(0 0 0 / 10%);
  padding: 1rem;

  width: 100%;
  z-index: 1;

  max-width: 900px;

  @include breakpoints.and-up(md) {
    grid-template-columns: 1fr 1fr;
  }
}

.card-content {
  display: flex;
  flex-direction: column;

  gap: 0.5rem;

  width: 100%;

  & > h4 {
    font-size: map.get(typography.$sizes, 'h4');
    font-weight: map.get(typography.$weights, 'h4');
    color: colors.$primary;
  }

  & > p {
    font-size: map.get(typography.$sizes, 'b1');
    font-weight: map.get(typography.$weights, 'b1');
    color: colors.$black;
  }
}

.img-container {
  display: flex;

  width: 100%;

  margin-top: 1rem;

  @include breakpoints.and-up(md) {
    margin-top: 0;
  }

  & > img {
    width: 100%;
    height: 200px;

    border-radius: 6px;
    border: 2px solid colors.$gray50;

    object-fit: cover;
  }
}
